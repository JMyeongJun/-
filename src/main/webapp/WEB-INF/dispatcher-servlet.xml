<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
    
    <context:component-scan base-package="com.*"></context:component-scan>
    <mvc:annotation-driven />
    
		<!-- static resource 설정 (ViewResolver 대상에서 제외) -->
    <mvc:resources location="/WEB-INF/resources/css/" mapping="/css/**"></mvc:resources>
    <mvc:resources location="/WEB-INF/resources/js/" mapping="/js/**"></mvc:resources>
    <mvc:resources location="/WEB-INF/resources/img/" mapping="/img/**"></mvc:resources>
    <mvc:resources location="/WEB-INF/resources/json/" mapping="/json/**"></mvc:resources>
    
    <bean id="viewResolver" 
    class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	    <property name="prefix" value="/WEB-INF/views/" />
	    <property name="suffix" value=".jsp" />    
    </bean>
    
    <bean id="dataSource" 
    class="org.apache.commons.dbcp.BasicDataSource"
    destroy-method="close">
	    <property name="driverClassName"  value="oracle.jdbc.OracleDriver" />
	    <property name="url"              value="jdbc:oracle:thin:@localhost:1521:xe?allowMultiQueries=true" />
	    <property name="username"         value="BOOKROOM" />
	    <property name="password"         value="1234" />    
    </bean>
    
    <!-- mybatis와 스프링 연결을 위한 SqlSessionFactoryBean 객체 사용 
    		 DB연결 및 SQL 명령 실행을 담당
   		 SqlSessionFactoryBean sqlSessionFactory = new SqlSessionFactoryBean();
   		 sqlSessionFactory.setDataSource(dataSource); //property 
   		 sqlSessionFactory.setMapperLocations(classpath:myBatis/sqlmaps/*.xml); //property 
    		 -->
    <bean id="sqlSessionFactory" 
    class="org.mybatis.spring.SqlSessionFactoryBean">
    	<!-- setter method 이용 -->
			<property name="dataSource" ref="dataSource" />
			<property name="mapperLocations" value="classpath:myBatis/sqlmaps/*.xml" />
    </bean>

		<!-- SqlSessionTemplate 설정
			SqlSessionTemplate sqlSession = new SqlSessionTemplate( sqlSessionFactory );
		 -->
		<bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate"
		destroy-method="clearCache">
		  <!-- 생성자 argument -->
			<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory">
			</constructor-arg>
		</bean>
		
		<!-- NaverLoginBO Class에 대한 Bean설정 추가 -->	
    <bean id="naverLoginBO" 
          class="com.bookroom.login.NaverLoginBO" >
    </bean>
</beans>






